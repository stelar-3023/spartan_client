{"version":3,"sources":["components/AccountDetailsModal.tsx","redux/exerciseSlice.ts","redux/userSlice.ts","components/LogWorkoutModal.tsx","components/LogModal.tsx","components/HomeComponent.tsx","components/LoginModal.tsx","components/SignupModal.tsx","components/LoginComponent.tsx","img/exercise.jpg","components/MainComponent.tsx","redux/store.ts","App.tsx","index.tsx"],"names":["AccountModal","props","user","useSelector","state","useState","isOpen","setIsOpen","toggleAccount","renderAccount","Modal","id","className","centered","toggle","ModalBody","user_email","user_name","addExercise","createAsyncThunk","exercise","a","console","log","fetch","email","method","headers","body","JSON","stringify","response","ok","json","exercises","error","Error","status","statusText","getExercises","deleteExercise","updateExercise","exercise_id","exerciseSlice","createSlice","name","initialState","reducers","extraReducers","pending","action","fulfilled","payload","rejected","index","findIndex","splice","push","accountDetails","jwt_token","localStorage","token","userSlice","WorkoutModal","dispatch","useDispatch","isLogWorkoutOpen","setIsLogWorkoutOpen","reps","weight","date","Date","inputs","setInputs","toggleWorkout","initFetch","useCallback","useEffect","handleChange","e","target","value","renderWorkout","Button","onClick","size","color","Form","onSubmit","preventDefault","FormGroup","Label","for","Input","onChange","type","autoComplete","placeholder","required","LogModal","isLogOpen","setIsLogOpen","isUpdating","setIsUpdating","setExercise","toggleLog","cancelModal","getExercise","renderLog","Table","map","exercisePosition","removeExercises","Home","handleLogout","removeItem","setAuth","toast","success","errorMessage","message","Jumbotron","fluid","Navbar","dark","sticky","expand","Nav","navbar","style","marginRight","NavItem","to","LoginModal","setState","isLoginOpen","setIsLoginOpen","password","resetInputs","onSubmitForm","parseRes","setItem","toggleLogin","renderLogin","SignupModal","isSignupOpen","setIsSignupOpen","history","useHistory","toggleSignup","renderSignup","Login","Main","isAuthenticated","setIsAuthenticated","boolean","exact","path","render","src","alt","reducer","combineReducers","exerciseReducer","userReducer","configureStore","devTools","App","store","theme","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.298d6f55.chunk.js","sourcesContent":["import { Fragment, useState } from 'react';\r\nimport { Modal, ModalBody } from 'reactstrap';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport function AccountModal(props: any) {\r\n  const user = useSelector((state: any) => state.user);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleAccount = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {props.renderAccount(toggleAccount)}\r\n      <Modal\r\n        id='modal-account'\r\n        className='modal'\r\n        centered={true}\r\n        isOpen={isOpen}\r\n        toggle={toggleAccount}\r\n      >\r\n        <ModalBody className='modal-content'>\r\n          <h2>Account Details</h2>\r\n          <br />\r\n          <div className='account-details'>\r\n            <h4 data-testid='email'>Email: {user.user.user_email}</h4>\r\n            <h4 data-testid='name'>Name: {user.user.user_name}</h4>\r\n          </div>\r\n        </ModalBody>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const addExercise: any = createAsyncThunk(\r\n  'exercise/addExercise',\r\n  async (exercise: any) => {\r\n    console.log(exercise);\r\n    const response = await fetch(\r\n      `/exercises/${exercise.email}`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(exercise),\r\n      }\r\n    );\r\n    if (response.ok) {\r\n      // console.log(exercise);\r\n      const exercises = await response.json();\r\n      // console.log(exercises);\r\n      return { exercises };\r\n    } else {\r\n      const error: any = new Error(\r\n        `Error ${response.status}: ${response.statusText}`\r\n      );\r\n      error.response = response;\r\n      throw error;\r\n    }\r\n  }\r\n);\r\n\r\nexport const getExercises: any = createAsyncThunk(\r\n  'exercises/getExercises',\r\n  async (email) => {\r\n    const response = await fetch(`/exercises/${email}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    if (response.ok) {\r\n      // console.log(response);\r\n      const exercises = await response.json();\r\n      // console.log(exercises);\r\n      return { exercises };\r\n    } else {\r\n      const error: any = new Error(\r\n        `Error ${response.status}: ${response.statusText}`\r\n      );\r\n      error.response = response;\r\n      throw error;\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteExercise: any = createAsyncThunk(\r\n  'exercises/deleteExercise',\r\n  async (id) => {\r\n    const response = await fetch(`/exercises/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    if (response.ok) {\r\n      const exercise = await response.json();\r\n      return { exercise };\r\n    } else {\r\n      const error: any = new Error(\r\n        `Error ${response.status}: ${response.statusText}`\r\n      );\r\n      error.response = response;\r\n      throw error;\r\n    }\r\n  }\r\n);\r\n\r\nexport const updateExercise: any = createAsyncThunk(\r\n  'exercises/updateExercise',\r\n  async (exercise: any) => {\r\n    const response = await fetch(\r\n      `/exercises/${exercise.exercise_id}`,\r\n      {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(exercise),\r\n      }\r\n    );\r\n    if (response.ok) {\r\n      const exercise = await response.json();\r\n      return { exercise };\r\n    } else {\r\n      const error: any = new Error(\r\n        `Error ${response.status}: ${response.statusText}`\r\n      );\r\n      error.response = response;\r\n      throw error;\r\n    }\r\n  }\r\n);\r\n\r\nconst exerciseSlice = createSlice({\r\n  name: 'exercises',\r\n  initialState: {\r\n    exercises: [],\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [getExercises.pending]: (state: any, action: any) => {\r\n      console.log('fetching exercises...');\r\n      state.status = 'fetching exercises...';\r\n    },\r\n    [getExercises.fulfilled]: (state: any, action: any) => {\r\n      console.log('fetched exercises successfully');\r\n      state.exercises = action.payload.exercises;\r\n    },\r\n    [getExercises.rejected]: (state: any, action: any) => {\r\n      console.log('error fetching exercises');\r\n      state.status = 'error fetching exercises';\r\n    },\r\n    [deleteExercise.fulfilled]: (state: any, action: any) => {\r\n      console.log('deleted exercise successfully');\r\n      let index = state.exercises.findIndex(\r\n        ({ id }: any) => id === action.payload.id\r\n      );\r\n      state.exercises.splice(index, 1);\r\n    },\r\n    [updateExercise.fulfilled]: (state: any, action: any) => {\r\n      // console.log(state, action);\r\n      const index = state.exercises.findIndex(\r\n        (exercise: any) =>\r\n          exercise.exercise_id === action.payload.exercise.exercise_id\r\n      );\r\n      state.exercises[index] = {\r\n        ...state.exercises[index],\r\n        ...action.payload.exercise,\r\n      };\r\n    },\r\n    [addExercise.fulfilled]: (state: any, action: any) => {\r\n      console.log(state, action);\r\n      console.log('added exercise successfully');\r\n      state.exercises.push(action.payload.exercises);\r\n    },\r\n  },\r\n});\r\n\r\nexport default exerciseSlice.reducer;\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const accountDetails: any = createAsyncThunk(\r\n  'user/getUserDetails',\r\n  async () => {\r\n    const response = await fetch('/profile/', {\r\n      method: 'POST',\r\n      headers: { jwt_token: localStorage.token },\r\n    });\r\n    if (response.ok) {\r\n      const user = await response.json();\r\n      return { user };\r\n    } else {\r\n      const error: any = new Error(\r\n        `Error ${response.status}: ${response.statusText}`\r\n      );\r\n      error.response = response;\r\n      throw error;\r\n    }\r\n  }\r\n);\r\n\r\nconst userSlice = createSlice({\r\n  // State\r\n  name: 'user',\r\n  initialState: {\r\n    user: {},\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [accountDetails.pending]: (state: any, action: any) => {\r\n      console.log('fetching user...');\r\n      state.status = 'fetching user...';\r\n    },\r\n    [accountDetails.fulfilled]: (state: any, action: any) => {\r\n      console.log('fetched user successfully');\r\n      state.user = action.payload.user;\r\n      \r\n    },\r\n    [accountDetails.rejected]: (state: any, action: any) => {\r\n      console.log('error fetching user');\r\n      state.status = 'error fetching user';\r\n    },\r\n  },\r\n});\r\n\r\nexport default userSlice.reducer;\r\n","import { Fragment, useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n} from 'reactstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addExercise } from '../redux/exerciseSlice';\r\nimport { accountDetails } from '../redux/userSlice';\r\nimport { getExercises } from '../redux/exerciseSlice';\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport function WorkoutModal(props: any) {\r\n  const dispatch = useDispatch();\r\n  const exercises = useSelector((state: any) => state.exercises);\r\n  const user = useSelector((state: any) => state.user);\r\n  const [isLogWorkoutOpen, setIsLogWorkoutOpen] = useState(false);\r\n  const [inputs, setInputs] = useState({\r\n    exercise: '',\r\n    reps: 0,\r\n    weight: 0,\r\n    date: new Date(),\r\n    email: user.user.user_email,\r\n  });\r\n\r\n  const toggleWorkout = () => {\r\n    setIsLogWorkoutOpen(!isLogWorkoutOpen);\r\n  };\r\n\r\n  const cancelModal = () => {\r\n    setIsLogWorkoutOpen(false);\r\n  };\r\n\r\n  const initFetch = useCallback(() => {\r\n    dispatch(accountDetails());\r\n    dispatch(getExercises(user.user.user_email));\r\n  }, [dispatch, user.user.user_email]);\r\n\r\n  useEffect(() => {\r\n    initFetch();\r\n  }, [initFetch]);\r\n\r\n  // const { exercise, reps, weight, date } = inputs;\r\n\r\n  const handleChange = (e: any) => {\r\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  console.log(exercises);\r\n\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    dispatch(addExercise(inputs));\r\n    console.log(inputs);\r\n    setInputs({\r\n      exercise: '',\r\n      reps: 0,\r\n      weight: 0,\r\n      date: new Date(),\r\n      email: user.user.user_email,\r\n    });\r\n    setIsLogWorkoutOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {props.renderWorkout(toggleWorkout)}\r\n      <Modal\r\n        id='modal-exercise'\r\n        className='modal'\r\n        centered={true}\r\n        isOpen={isLogWorkoutOpen}\r\n        toggle={toggleWorkout}\r\n      >\r\n        <ModalBody>\r\n          <Button\r\n            className='cancel-log'\r\n            onClick={cancelModal}\r\n            size='sm'\r\n            color='danger'\r\n          >\r\n            &times;\r\n          </Button>\r\n          <h2>Add Exercises</h2>\r\n          <br />\r\n          <Form onSubmit={handleSubmit} id='exercise-form'>\r\n            <FormGroup className='input-field'>\r\n              <Label for='exercise'>Exercise</Label>\r\n              <Input\r\n                value={inputs.exercise}\r\n                onChange={(e) => handleChange(e)}\r\n                type='text'\r\n                name='exercise'\r\n                autoComplete='off'\r\n                id='exercise'\r\n                placeholder='exercise'\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup className='input-field'>\r\n              <Label for='repetitions'>Reps</Label>\r\n              <Input\r\n                value={inputs.reps}\r\n                onChange={(e) => handleChange(e)}\r\n                type='number'\r\n                name='reps'\r\n                autoComplete='off'\r\n                id='reps'\r\n                placeholder='reps'\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup className='input-field'>\r\n              <Label for='repetitions'>Weight</Label>\r\n              <Input\r\n                value={inputs.weight}\r\n                onChange={(e) => handleChange(e)}\r\n                type='number'\r\n                name='weight'\r\n                autoComplete='off'\r\n                id='weight'\r\n                placeholder='weight'\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <br />\r\n            <Button type='submit' color='danger' size='sm'>\r\n              Add Exercise\r\n            </Button>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { Fragment, useState } from 'react';\r\nimport { Button, Input, Modal, ModalBody, Table } from 'reactstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteExercise, updateExercise } from '../redux/exerciseSlice';\r\n\r\nexport function LogModal(props: any) {\r\n  const dispatch = useDispatch();\r\n  const exercises = useSelector((state: any) => state.exercises);\r\n  const [isLogOpen, setIsLogOpen] = useState(false);\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n  const [exercise, setExercise] = useState({\r\n    exercise_id: '',\r\n    exercise: '',\r\n    reps: '',\r\n    weight: '',\r\n  });\r\n\r\n  const toggleLog = () => {\r\n    setIsLogOpen(!isLogOpen);\r\n  };\r\n\r\n  const cancelModal = () => {\r\n    setIsLogOpen(false);\r\n    setIsUpdating(false);\r\n  };\r\n\r\n  const removeExercises = (e: any) => {\r\n    const exercisePosition = e.target.id;\r\n    // console.log(exercises.exercises[0].exercise_id);\r\n    dispatch(deleteExercise(exercises.exercises[exercisePosition].exercise_id));\r\n    // console.log('deleting..');\r\n  };\r\n\r\n  // console.log(exercises);\r\n  // console.log(exercises.exercises[0].user_email);\r\n\r\n  const updateExercises = () => {\r\n    // const exercisePosition = e.target.id;\r\n    // console.log(exercises.exercises[exercisePosition].exercise_id);\r\n    dispatch(updateExercise(exercise));\r\n    console.log(exercise);\r\n    // console.log('updating...');\r\n    setIsUpdating(false);\r\n    setIsLogOpen(!isLogOpen);\r\n  };\r\n\r\n  const getExercise = (e: any) => {\r\n    setIsUpdating(true);\r\n    setExercise(exercises.exercises[e.target.id]);\r\n    console.log(exercise);\r\n    console.log(e.target.id);\r\n  };\r\n\r\n  const renderInputs = () => {\r\n    return (\r\n      <div>\r\n        <Input\r\n          type='text'\r\n          name='exercise'\r\n          value={exercise.exercise}\r\n          onChange={(e) => {\r\n            setExercise({ ...exercise, [e.target.name]: e.target.value });\r\n          }}\r\n        ></Input>\r\n        <br />\r\n        <Input\r\n          type='text'\r\n          name='reps'\r\n          value={exercise.reps}\r\n          onChange={(e) => {\r\n            setExercise({ ...exercise, [e.target.name]: e.target.value });\r\n          }}\r\n        ></Input>\r\n        <br />\r\n        <Input\r\n          type='text'\r\n          name='weight'\r\n          value={exercise.weight}\r\n          onChange={(e) => {\r\n            setExercise({ ...exercise, [e.target.name]: e.target.value });\r\n          }}\r\n        ></Input>\r\n        <br />\r\n        <Button\r\n          onClick={() => {\r\n            updateExercises();\r\n          }}\r\n          type='submit'\r\n          size='sm'\r\n          className='mb-1 log-button save-button'\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            cancelModal();\r\n          }}\r\n          type='submit'\r\n          size='sm'\r\n          className='mb-1 log-button save-button'\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderTable = () => {\r\n    return (\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>Exercises</th>\r\n            <th>Reps</th>\r\n            <th>Weight</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {exercises.exercises.map((exercise: any, index: any) => (\r\n            <tr key={exercise.exercise_id}>\r\n              <td>{exercise.exercise}</td>\r\n              <td>{exercise.reps}</td>\r\n              <td>{exercise.weight}</td>\r\n              <td>\r\n                <Button\r\n                  id={index}\r\n                  // onClick={(e) => updateExercises(e)}\r\n                  onClick={(e) => getExercise(e)}\r\n                  type='submit'\r\n                  size='sm'\r\n                  className='log-button'\r\n                >\r\n                  Modify\r\n                </Button>\r\n              </td>\r\n              <td>\r\n                <Button\r\n                  id={index}\r\n                  onClick={(e) => removeExercises(e)}\r\n                  type='submit'\r\n                  size='sm'\r\n                  className='log-button'\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {props.renderLog(toggleLog)}\r\n      <Modal\r\n        id='modal-log'\r\n        className='modal'\r\n        isOpen={isLogOpen}\r\n        centered={true}\r\n        toggle={toggleLog}\r\n      >\r\n        <ModalBody>\r\n          <Button\r\n            className='cancel-log'\r\n            onClick={cancelModal}\r\n            size='sm'\r\n            color='danger'\r\n          >\r\n            &times;\r\n          </Button>\r\n          <h2>Workout</h2>\r\n          {isUpdating ? renderInputs() : renderTable()}\r\n        </ModalBody>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { Fragment, useEffect, useCallback } from 'react';\r\nimport { Jumbotron, Nav, NavItem, Navbar } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { AccountModal } from './AccountDetailsModal';\r\nimport { WorkoutModal } from './LogWorkoutModal';\r\nimport { LogModal } from './LogModal';\r\nimport { toast } from 'react-toastify';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { accountDetails } from '../redux/userSlice';\r\nimport { getExercises } from '../redux/exerciseSlice';\r\n\r\nexport function Home(props: any) {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state: any) => state.user);\r\n\r\n  // handleLogout goes here\r\n  const handleLogout = async (e: any) => {\r\n    e.preventDefault();\r\n    try {\r\n      localStorage.removeItem('token');\r\n      props.setAuth(false);\r\n      toast.success('Logged out successfully');\r\n    } catch (error) {\r\n      let errorMessage = 'Server Error';\r\n      if (error instanceof Error) {\r\n        errorMessage = error.message;\r\n      }\r\n      toast.error(errorMessage);\r\n    }\r\n  };\r\n\r\n  const initFetch = useCallback(() => {\r\n    dispatch(accountDetails());\r\n    dispatch(getExercises(user.user.user_email));\r\n  }, [dispatch, user.user.user_email]);\r\n\r\n  useEffect(() => {\r\n    initFetch();\r\n  }, [initFetch]);\r\n\r\n\r\n  // console.log('state: ', store.getState());\r\n\r\n  return (\r\n    <Fragment>\r\n      <Jumbotron fluid>\r\n        <div className='container'>\r\n          <div className='row'>\r\n            <div className='col'>\r\n              <h1 data-text='header'>Spartan Calisthenics</h1>\r\n              <h2>A better way to train.</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Jumbotron>\r\n      <Navbar dark sticky='top' expand='sm'>\r\n        <div className='container'>\r\n          <Nav navbar style={{ marginRight: 'auto' }}>\r\n            <NavItem>\r\n              <AccountModal\r\n                name={user.user_name}\r\n                email={user.email}\r\n                renderAccount={(toggleAccount: any) => (\r\n                  <NavLink\r\n                    onClick={toggleAccount}\r\n                    className='nav-link logged-in'\r\n                    data-target='modal-account'\r\n                    to='#'\r\n                  >\r\n                    Account\r\n                  </NavLink>\r\n                )}\r\n              />\r\n            </NavItem>\r\n            <NavItem>\r\n              <WorkoutModal\r\n                // email={email}\r\n                renderWorkout={(toggleWorkout: any) => (\r\n                  <NavLink\r\n                    onClick={toggleWorkout}\r\n                    className='nav-link logged-in'\r\n                    data-target='modal-exercise'\r\n                    to='#'\r\n                  >\r\n                    Log Workout\r\n                  </NavLink>\r\n                )}\r\n              />\r\n            </NavItem>\r\n            <NavItem>\r\n              <LogModal\r\n                // email={email}\r\n                renderLog={(toggleLog: any) => (\r\n                  <NavLink\r\n                    onClick={toggleLog}\r\n                    className='nav-link logged-in'\r\n                    to='#'\r\n                    data-target='modal-log'\r\n                  >\r\n                    Log\r\n                  </NavLink>\r\n                )}\r\n              />\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                onClick={(e) => handleLogout(e)}\r\n                className='nav-link logged-in'\r\n                to='#'\r\n              >\r\n                Logout\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </div>\r\n      </Navbar>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { Fragment, useState, useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n} from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport function LoginModal(props: any) {\r\n  const [state, setState] = useState({});\r\n  const [isLoginOpen, setIsLoginOpen] = useState(false);\r\n  const [inputs, setInputs] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  // clean the state in the unmount of the component\r\n  useEffect(() => {\r\n    resetInputs();\r\n    return () => {\r\n      setState({});\r\n    };\r\n  }, []);\r\n\r\n  const resetInputs = () => {\r\n    setState({ setInputs });\r\n  };\r\n  console.log(state);\r\n\r\n  const { email, password } = inputs;\r\n\r\n  const handleChange = (e: any) => {\r\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmitForm = async (e: any) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = { email, password };\r\n\r\n      const response = await fetch('/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n      // console.log(parseRes);\r\n\r\n      if (parseRes.token) {\r\n        localStorage.setItem('token', parseRes.token);\r\n        props.setAuth(true);\r\n        toast.success('Login successful');\r\n      } else {\r\n        props.setAuth(false);\r\n        toast.error(parseRes);\r\n      }\r\n    } catch (error) {\r\n      let errorMessage = 'Server error';\r\n      if (error instanceof Error) {\r\n        errorMessage = error.message;\r\n      }\r\n      console.error(errorMessage);\r\n    }\r\n    // eslint-disable-next-line no-lone-blocks\r\n    {\r\n      toggleLogin();\r\n    }\r\n  };\r\n\r\n  const toggleLogin = () => {\r\n    setIsLoginOpen(!isLoginOpen);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {props.renderLogin(toggleLogin)}\r\n      <Modal\r\n        id='modal-login'\r\n        className='modal'\r\n        isOpen={isLoginOpen}\r\n        centered={true}\r\n        toggle={toggleLogin}\r\n      >\r\n        <ModalBody className='modal-content'>\r\n          <h4>Login</h4>\r\n          <br />\r\n          <Form onSubmit={onSubmitForm} id='login-form'>\r\n            <FormGroup className='input-field'>\r\n              <Label for='login-email'>Email Address</Label>\r\n              <Input\r\n                value={email}\r\n                onChange={(e) => handleChange(e)}\r\n                type='email'\r\n                name='email'\r\n                data-testid='email-input'\r\n                autoComplete='off'\r\n                id='login-email'\r\n                placeholder='email'\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup className='input-field'>\r\n              <Label for='login-password'>Your Password</Label>\r\n              <Input\r\n                value={password}\r\n                onChange={(e) => handleChange(e)}\r\n                type='password'\r\n                name='password'\r\n                autoComplete='off'\r\n                id='login-password'\r\n                placeholder='password'\r\n                required\r\n              />\r\n              <br />\r\n              <Button type='submit' /*onClick={}*/ color='danger' size='sm'>\r\n                Login\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { Fragment, useState, useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n} from 'reactstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport function SignupModal(props: any) {\r\n  const [state, setState] = useState({});\r\n  const [isSignupOpen, setIsSignupOpen] = useState(false);\r\n  const [inputs, setInputs] = useState({\r\n    email: '',\r\n    password: '',\r\n    name: '',\r\n  });\r\n\r\n  // clean the state in the unmount of the component\r\n  useEffect(() => {\r\n    resetInputs();\r\n    return () => {\r\n      setState({});\r\n    };\r\n  }, []);\r\n\r\n  const resetInputs = () => {\r\n    setState({ setInputs });\r\n  };\r\n  console.log(state);\r\n\r\n  const history = useHistory();\r\n\r\n  const { email, password, name } = inputs;\r\n\r\n  const toggleSignup = () => {\r\n    setIsSignupOpen(!isSignupOpen);\r\n  };\r\n\r\n  const handleChange = (e: any) => {\r\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmitForm = async (e: any) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = { email, password, name };\r\n      const response = await fetch('/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n      if (parseRes === 'User already registered') {\r\n        history.push('/');\r\n        toast.error(parseRes);\r\n      } else {\r\n        console.log(parseRes);\r\n        localStorage.setItem('token', parseRes);\r\n        history.push('/home');\r\n        props.setAuth(true);\r\n        toast.success('Register successful');\r\n      }\r\n    } catch (error) {\r\n      let errorMessage = 'Server error';\r\n      if (error instanceof Error) {\r\n        errorMessage = error.message;\r\n      }\r\n      console.error(errorMessage);\r\n    }\r\n    // eslint-disable-next-line no-lone-blocks\r\n    {\r\n      toggleSignup();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {props.renderSignup(toggleSignup)}\r\n      <Modal\r\n        id='modal-signup'\r\n        className='modal'\r\n        isOpen={isSignupOpen}\r\n        centered={true}\r\n        toggle={toggleSignup}\r\n      >\r\n        <ModalBody className='modal-content'>\r\n          <h4>Sign up</h4>\r\n          <br />\r\n          <Form onSubmit={onSubmitForm} id='signup-form'>\r\n            <FormGroup className='input-field'>\r\n              <Label for='signup-email'>Email Address</Label>\r\n              <Input\r\n                value={email}\r\n                onChange={(e) => handleChange(e)}\r\n                type='email'\r\n                name='email'\r\n                data-testid='email-input'\r\n                autoComplete='on'\r\n                id='signup-email'\r\n                placeholder='Enter email'\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup className='input-field'>\r\n              <Label for='sign-up-password'>Choose Password</Label>\r\n              <Input\r\n                value={password}\r\n                onChange={(e) => handleChange(e)}\r\n                type='password'\r\n                name='password'\r\n                autoComplete='off'\r\n                id='signup-password'\r\n                placeholder='password'\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup className='input-field'>\r\n              <Label for='signup-username'>Choose username</Label>\r\n              <Input\r\n                value={name}\r\n                onChange={(e) => handleChange(e)}\r\n                type='text'\r\n                name='name'\r\n                autoComplete='off'\r\n                id='signup-username'\r\n                placeholder='username'\r\n                required\r\n              />\r\n              <br />\r\n              <Button type='submit' /*onClick={}*/ color='danger' size='sm'>\r\n                Submit\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { Fragment } from 'react';\r\nimport { Jumbotron, Nav, NavItem, Navbar } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { LoginModal } from './LoginModal';\r\nimport { SignupModal } from './SignupModal';\r\n\r\nexport function Login(props: any) {\r\n  return (\r\n    <Fragment>\r\n      <Jumbotron fluid>\r\n        <div className='container'>\r\n          <div className='row'>\r\n            <div className='col'>\r\n              <h1>Spartan Calisthenics</h1>\r\n              <h2>A better way to train.</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Jumbotron>\r\n      <Navbar dark sticky='top' expand='sm'>\r\n        <div className='container'>\r\n          <Nav\r\n            navbar\r\n            style={{\r\n              marginRight: 'auto',\r\n            }}\r\n          >\r\n            <NavItem>\r\n              <LoginModal\r\n                setAuth={props.setAuth}\r\n                renderLogin={(toggleLogin: any) => (\r\n                  <NavLink\r\n                    onClick={toggleLogin}\r\n                    className='nav-link logged-out'\r\n                    data-target='modal-login'\r\n                    to='#'\r\n                  >\r\n                    Login\r\n                  </NavLink>\r\n                )}\r\n              />\r\n            </NavItem>\r\n            <NavItem>\r\n              <SignupModal\r\n                setAuth={props.setAuth}\r\n                renderSignup={(toggleSignup: any) => (\r\n                  <NavLink\r\n                    onClick={toggleSignup}\r\n                    className='nav-link logged-out'\r\n                    data-target='modal-signup'\r\n                    to='#'\r\n                  >\r\n                    Sign up\r\n                  </NavLink>\r\n                )}\r\n              />\r\n            </NavItem>\r\n          </Nav>\r\n        </div>\r\n      </Navbar>\r\n    </Fragment>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/exercise.aeee0cf6.jpg\";","import { useState } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport { Home } from './HomeComponent';\r\nimport { Login } from './LoginComponent';\r\nimport exercise from '../img/exercise.jpg';\r\n\r\nexport function Main() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n\r\n  const setAuth = (boolean: any) => {\r\n    setIsAuthenticated(boolean);\r\n  };\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <div className='container'>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path='/'\r\n            render={(props: any) =>\r\n              !isAuthenticated ? (\r\n                <Login setAuth={setAuth} {...props} />\r\n              ) : (\r\n                <Redirect to='/home' />\r\n              )\r\n            }\r\n          />\r\n          <Route\r\n            path='/home'\r\n            render={(props: any) =>\r\n              isAuthenticated ? (\r\n                <Home setAuth={setAuth} {...props} />\r\n              ) : (\r\n                <Redirect to='/' />\r\n              )\r\n            }\r\n          />\r\n        </Switch>\r\n      </div>\r\n      <img src={exercise} alt='exercise' className='exercise-img' />\r\n    </Router>\r\n  );\r\n}\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport exerciseReducer from './exerciseSlice';\r\nimport userReducer from './userSlice';\r\n\r\nconst reducer = combineReducers({\r\n  exercises: exerciseReducer,\r\n  user: userReducer,\r\n});\r\n\r\nexport default configureStore({\r\n  reducer,\r\n  devTools: true\r\n});\r\n","import { BrowserRouter } from 'react-router-dom';\nimport { Main } from './components/MainComponent';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className='App'>\n        <Provider store={store}>\n          <Main />\n          <ToastContainer theme='dark' />\n        </Provider>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.scss';\nimport App from './App';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}